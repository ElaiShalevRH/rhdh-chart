{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/redhat-developer/rhdh-chart/main/charts/backstage/values.schema.json",
    "type": "object",
    "title": "Root Schema",
    "properties": {
        "upstream": {
            "title": "Upstream Backstage chart schema.",
            "$ref": "https://raw.githubusercontent.com/backstage/charts/backstage-{{ dependencies | selectattr('name', 'equalto', 'backstage') | map(attribute='version') | list | join('') }}/charts/backstage/values.schema.json",
            "default": {
                "backstage": {
                    "image": {
                        "registry": "quay.io",
                        "repository": "janus-idp/redhat-backstage-build",
                        "tag": "latest"
                    }
                }
            }
        },
        "global": {
            "type": "object",
            "properties": {
                "clusterRouterBase": {
                    "title": "Shorthand for users who do not want to specify a custom HOSTNAME. Used ONLY with the DEFAULT upstream.backstage.appConfig value and with OCP Route enabled.",
                    "type": "string",
                    "default": "apps.example.com"
                },
                "host": {
                    "title": "Custom hostname shorthand, overrides `global.clusterRouterBase`, `upstream.ingress.host`, `route.host`, and url values in `upstream.backstage.appConfig`",
                    "type": "string",
                    "default": ""
                },
                "dynamic": {
                    "title": "Dynamic plugins configuration.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "plugins": {
                            "title": "List of dynamic plugins that should be installed in the backstage application.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "package": {
                                        "title": "Package specification of the dynamic plugin to install. It should be usable by the `npm pack` command.",
                                        "type": "string"
                                    },
                                    "integrity": {
                                        "title": "Integrity checksum of the package. Optional for local packages. Supported algorithms include: `sha512`, `sha384` and `sha256`. Refer to https://w3c.github.io/webappsec-subresource-integrity/#integrity-metadata-description for more information",
                                        "type": "string"
                                    },
                                    "pluginConfig": {
                                        "title": "Optional plugin-specific app-config YAML fragment.",
                                        "type": "object"
                                    },
                                    "disabled": {
                                        "title": "Disable the plugin.",
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "required": ["package"]
                            }
                        },
                        "includes": {
                            "title": "List of YAML files to include, each of which should contain a `plugins` array.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": []
                        }
                    }
                },
                "auth": {
                    "title": "Enable service authentication within Backstage instance",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "backend": {
                            "title": "Backend service to service authentication",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "title": "Enable backend service to service authentication, unless configured otherwise it generates a secret value",
                                    "type": "boolean",
                                    "default": true
                                },
                                "existingSecret": {
                                    "title": "Instead of generating a secret value, refer to existing secret",
                                    "type": "string",
                                    "default": ""
                                },
                                "value": {
                                    "title": "Instead of generating a secret value, use the following value",
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    }
                }
            }
        },
        "route": {
            "title": "OpenShift Route parameters.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "annotations": {
                    "title": "Route specific annotations.",
                    "type":  "object",
                    "default": {}
                },
                "enabled": {
                    "title": "Enable the creation of the route resource.",
                    "type": "boolean",
                    "default": false
                },
                "host": {
                    "title": "Set the host attribute to a custom value.",
                    "type": "string",
                    "default": "",
                    "examples": [
                        "https://bakstage.example.com"
                    ]
                },
                "path": {
                    "title": "Path that the router watches for, to route traffic for to the service.",
                    "type": "string",
                    "default": "/"
                },
                "wildcardPolicy": {
                    "title": "Wildcard policy if any for the route.",
                    "type": "string",
                    "default": "None",
                    "enum": [
                        "None",
                        "Subdomain"
                    ]
                },
                "tls": {
                    "title": "Route TLS parameters.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "title": "Enable TLS configuration for the host defined at `route.host` parameter.",
                            "type": "boolean",
                            "default": false
                        },
                        "termination": {
                            "title": "Specify TLS termination.",
                            "type": "string",
                            "default": "edge",
                            "enum": [
                                "edge",
                                "reencrypt",
                                "passthrough"
                            ]
                        },
                        "certificate": {
                            "title": "Certificate contents.",
                            "type": "string",
                            "default": ""
                        },
                        "key": {
                            "title": "Key file contents.",
                            "type": "string",
                            "default": ""
                        },
                        "caCertificate": {
                            "title": "Cert authority certificate contents.",
                            "type": "string",
                            "default": ""
                        },
                        "destinationCACertificate": {
                            "title": "Contents of the ca certificate of the final destination.",
                            "type": "string",
                            "default": ""
                        },
                        "insecureEdgeTerminationPolicy": {
                            "title": "Indicates the desired behavior for insecure connections to a route.",
                            "type": "string",
                            "default": "Redirect",
                            "enum": [
                                "Redirect",
                                "None",
                                ""
                            ]
                        }
                    }
                }
            }
        },
        "orchestrator": {
            "title": "orchestrator configuration",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "title": "enabled flag",
                    "type": "boolean",
                    "default": true
                },
                "rhdhOperator": {
                    "title": "rhdhOperator configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "isReleaseCandidate": {
                            "title": "isReleaseCandidate flag",
                            "type": "boolean",
                            "default": false
                        },
                        "enabled": {
                            "title": "enabled flag",
                            "type": "boolean",
                            "default": true
                        },
                        "enableGuestProvider": {
                            "title": "enableGuestProvider flag",
                            "type": "boolean",
                            "default": false
                        },
                        "catalogBranch": {
                            "title": "catalogBranch value",
                            "type": "string",
                            "default": "v1.4.x"
                        },
                        "secretRef": {
                            "title": "secretRef configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "name": {
                                    "title": "name value",
                                    "type": "string",
                                    "default": "backstage-backend-auth-secret"
                                },
                                "backstage": {
                                    "title": "backstage configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "backendSecret": {
                                            "title": "backendSecret value",
                                            "type": "string",
                                            "default": "{{ .Values.global.auth.value }}"
                                        }
                                    }
                                },
                                "github": {
                                    "title": "github configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "token": {
                                            "title": "token value",
                                            "type": "string",
                                            "default": "GITHUB_TOKEN"
                                        },
                                        "clientId": {
                                            "title": "clientId value",
                                            "type": "string",
                                            "default": "GITHUB_CLIENT_ID"
                                        },
                                        "clientSecret": {
                                            "title": "clientSecret value",
                                            "type": "string",
                                            "default": "GITHUB_CLIENT_SECRET"
                                        }
                                    }
                                },
                                "gitlab": {
                                    "title": "gitlab configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "host": {
                                            "title": "host value",
                                            "type": "string",
                                            "default": "GITLAB_HOST"
                                        },
                                        "token": {
                                            "title": "token value",
                                            "type": "string",
                                            "default": "GITLAB_TOKEN"
                                        }
                                    }
                                },
                                "k8s": {
                                    "title": "k8s configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "clusterToken": {
                                            "title": "clusterToken value",
                                            "type": "string",
                                            "default": "K8S_CLUSTER_TOKEN"
                                        },
                                        "clusterUrl": {
                                            "title": "clusterUrl value",
                                            "type": "string",
                                            "default": "K8S_CLUSTER_URL"
                                        }
                                    }
                                },
                                "argocd": {
                                    "title": "argocd configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "url": {
                                            "title": "url value",
                                            "type": "string",
                                            "default": "ARGOCD_URL"
                                        },
                                        "username": {
                                            "title": "username value",
                                            "type": "string",
                                            "default": "ARGOCD_USERNAME"
                                        },
                                        "password": {
                                            "title": "password value",
                                            "type": "string",
                                            "default": "ARGOCD_PASSWORD"
                                        }
                                    }
                                },
                                "notificationsEmail": {
                                    "title": "notificationsEmail configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "hostname": {
                                            "title": "hostname value",
                                            "type": "string",
                                            "default": "NOTIFICATIONS_EMAIL_HOSTNAME"
                                        },
                                        "username": {
                                            "title": "username value",
                                            "type": "string",
                                            "default": "NOTIFICATIONS_EMAIL_USERNAME"
                                        },
                                        "password": {
                                            "title": "password value",
                                            "type": "string",
                                            "default": "NOTIFICATIONS_EMAIL_PASSWORD"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "rhdhPlugins": {
                    "title": "rhdhPlugins configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "npmRegistry": {
                            "title": "npmRegistry value",
                            "type": "string",
                            "default": ""
                        },
                        "scope": {
                            "title": "scope value",
                            "type": "string",
                            "default": "https://github.com/rhdhorchestrator/orchestrator-plugins-internal-release/releases/download/1.4.0"
                        },
                        "orchestrator": {
                            "title": "orchestrator configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "package": {
                                    "title": "package value",
                                    "type": "string",
                                    "default": "backstage-plugin-orchestrator-1.4.0-rc.7.tgz"
                                },
                                "integrity": {
                                    "title": "integrity value",
                                    "type": "string",
                                    "default": "sha512-Vclb+TIL8cEtf9G2nx0UJ+kMJnCGZuYG/Xcw0Otdo/fZGuynnoCaAZ6rHnt4PR6LerekHYWNUbzM3X+AVj5cwg=="
                                }
                            }
                        },
                        "orchestratorBackend": {
                            "title": "orchestratorBackend configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "package": {
                                    "title": "package value",
                                    "type": "string",
                                    "default": "backstage-plugin-orchestrator-backend-dynamic-1.4.0-rc.7.tgz"
                                },
                                "integrity": {
                                    "title": "integrity value",
                                    "type": "string",
                                    "default": "sha512-bxD0Au2V9BeUMcZBfNYrPSQ161vmZyKwm6Yik5keZZ09tenkc8fNjipwJsWVFQCDcAOOxdBAE0ibgHtddl3NKw=="
                                }
                            }
                        },
                        "notificationsEmail": {
                            "title": "notificationsEmail configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "title": "enabled flag",
                                    "type": "boolean",
                                    "default": false
                                },
                                "port": {
                                    "title": "port number",
                                    "type": "integer",
                                    "default": 587
                                },
                                "sender": {
                                    "title": "sender value",
                                    "type": "string",
                                    "default": ""
                                },
                                "replyTo": {
                                    "title": "replyTo value",
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    }
                },
                "sonataFlowOperator": {
                    "title": "sonataFlowOperator configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "title": "enabled flag",
                            "type": "boolean",
                            "default": true
                        }
                    }
                },
                "serverlessOperator": {
                    "title": "serverlessOperator configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "title": "enabled flag",
                            "type": "boolean",
                            "default": true
                        }
                    }
                },
                "postgres": {
                    "title": "postgres configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "serviceName": {
                            "title": "serviceName value",
                            "type": "string",
                            "default": "sonataflow-psql-postgresql"
                        },
                        "serviceNamespace": {
                            "title": "serviceNamespace value",
                            "type": "string",
                            "default": ""
                        },
                        "authSecret": {
                            "title": "authSecret configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "name": {
                                    "title": "name value",
                                    "type": "string",
                                    "default": "sonataflow-psql-postgresql"
                                },
                                "userKey": {
                                    "title": "userKey value",
                                    "type": "string",
                                    "default": "postgres-username"
                                },
                                "passwordKey": {
                                    "title": "passwordKey value",
                                    "type": "string",
                                    "default": "postgres-password"
                                }
                            }
                        },
                        "database": {
                            "title": "database value",
                            "type": "string",
                            "default": "sonataflow"
                        }
                    }
                },
                "orchestrator": {
                    "title": "orchestrator configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "namespace": {
                            "title": "namespace value",
                            "type": "string",
                            "default": "sonataflow-infra"
                        },
                        "sonataflowPlatform": {
                            "title": "sonataflowPlatform configuration",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "monitoring": {
                                    "title": "monitoring configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "enabled": {
                                            "title": "enabled flag",
                                            "type": "boolean",
                                            "default": true
                                        }
                                    }
                                },
                                "eventing": {
                                    "title": "eventing configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "broker": {
                                            "title": "broker configuration",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "name": {
                                                    "title": "name value",
                                                    "type": "string",
                                                    "default": ""
                                                },
                                                "namespace": {
                                                    "title": "namespace value",
                                                    "type": "string",
                                                    "default": ""
                                                }
                                            }
                                        }
                                    }
                                },
                                "resources": {
                                    "title": "resources configuration",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "requests": {
                                            "title": "requests configuration",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "memory": {
                                                    "title": "memory value",
                                                    "type": "string",
                                                    "default": "64Mi"
                                                },
                                                "cpu": {
                                                    "title": "cpu value",
                                                    "type": "string",
                                                    "default": "250m"
                                                }
                                            }
                                        },
                                        "limits": {
                                            "title": "limits configuration",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "memory": {
                                                    "title": "memory value",
                                                    "type": "string",
                                                    "default": "1Gi"
                                                },
                                                "cpu": {
                                                    "title": "cpu value",
                                                    "type": "string",
                                                    "default": "500m"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tekton": {
                    "title": "tekton configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "title": "enabled flag",
                            "type": "boolean",
                            "default": false
                        }
                    }
                },
                "argocd": {
                    "title": "argocd configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "title": "enabled flag",
                            "type": "boolean",
                            "default": false
                        },
                        "namespace": {
                            "title": "namespace value",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
                "networkPolicy": {
                    "title": "networkPolicy configuration",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "rhdhNamespace": {
                            "title": "rhdhNamespace value",
                            "type": "string",
                            "default": ""
                        }
                    }
                }
            }
        }
    }
}